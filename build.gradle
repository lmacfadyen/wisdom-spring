buildscript {
    ext {
        springBootVersion = '2.3.5.RELEASE'
    }
    repositories {
        maven { url "https://repo.maven.apache.org/maven2" }
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"


/*plugins {
    id "org.springframework.boot" version "2.3.5.RELEASE"
}*/
jar {
    baseName = 'gs-accessing-mongodb-data-rest'
    version = '2.1.6'
}



bootJar {
    archiveFileName = 'app.jar'
}

/*task wrapper(type: Wrapper) {
    gradleVersion = '6.3'
}*/

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

/*task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }

}*/

stage.mustRunAfter(clean)

apply plugin:'application'
mainClassName = "wisdom-spring.Application"

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
}

task {
    doLast {
        project.file('app.jar').delete()
    }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    testCompile("org.springframework.boot:spring-boot-starter-test")

}